//Потребно е да се пронајдат и избројат сите појавувања на обликот „Х“ составен само од елементите со вредност 1.
// Обликот „Х“ е составен од 5 елементи со вредност 1 кои се соодветно распределни во матрицата (елемент со вредност 1
// кој има елементи со вредност 1 како негови дијагонални соседи).
//
//Од стандарден влез се вчитуваат димензиите на една матрица и елементите на истата. Потребно е да ги изброите сите
// појавувања на обликот „Х“ во рамките на матрицата. Да се претпостави дека не смее да има поклопување на елементите
// од два облика „Х“ (пример 2). Појавувањата на обликот „Х“ се бараат одлево-надесно и одгоре-надоле.


#include <iostream>

using namespace std;

int main() {
    int a[100][100], n, m, br = 0;
    cin >> n >> m;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cin >> a[i][j];
        }
    }

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (a[i][j] == 1 && a[i - 1][j] == 1 && a[i + 1][j] == 1 && a[i][j - 1] == 1 && a[i][j + 1] == 1) {
                br++;
                a[i][j] = a[i - 1][j] = a[i + 1][j] = a[i][j - 1] = a[i][j + 1] = 0;
            }
        }
    }

    cout<<br;
    return 0;
}